generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Scene {
  id       Int          @id @default(autoincrement())
  capsules Capsule[]
  medias   SceneMedia[]
}

model SceneMedia {
  id      Int    @id @default(autoincrement())
  order   Int
  events  String // JSON
  mediaId Int    @map("media_id")
  media   Media  @relation(fields: [mediaId], references: [id])
  sceneId Int    @map("scene_id")
  scene   Scene  @relation(fields: [sceneId], references: [id])

  @@map("scene_media")
}

// enum TypeMedia {
//   img
//   txt
//   son
//   video
//   capsule
// }

model Media {
  id             Int              @id @default(autoincrement())
  type           String
  path           String?
  content        String?
  sceneMedia     SceneMedia[]
  capsuleElement CapsuleElement[]
}

model Capsule {
  id       Int              @id @default(autoincrement())
  type     String
  elements CapsuleElement[]
  sceneId  Int              @map("scene_id")
  scene    Scene            @relation(fields: [sceneId], references: [id])
}

model CapsuleElement {
  id        Int      @id @default(autoincrement())
  order     Int
  events    Event[]
  mediaId   Int      @map("media_id")
  media     Media    @relation(fields: [mediaId], references: [id])
  capsuleId Int      @map("capsule_id")
  capsule   Capsule? @relation(fields: [capsuleId], references: [id])
}

model Event {
  id      Int    @id @default(autoincrement())
  name    String
  action  String
  startAt Float  @map("start_at")

  elementId Int?            @map("element_id")
  element   CapsuleElement? @relation(fields: [elementId], references: [id])
}
